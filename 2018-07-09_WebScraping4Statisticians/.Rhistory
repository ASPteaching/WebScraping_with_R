require(knitr)
# include this code chunk as-is to set options
opts_chunk$set(comment = NA, prompt = TRUE, tidy = FALSE, fig.width = 7, fig.height = 7,echo = TRUE, message = FALSE, warning = FALSE, cache=FALSE)
Sys.setlocale("LC_TIME", "C")
# load packages
if (!require(stringr)) install.packages("stringr", dep=TRUE)
if (!require(XML)) install.packages("XML", dep=TRUE)
if (!require(maps)) install.packages("maps", dep=TRUE)
require(stringr)
require(XML)
require(maps)
heritage_parsed <- htmlParse("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
heritage_parsed <- htmlParse("worldheritagedanger.htm")
tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
names(tables)
danger_table <- tables[[2]]
heritage_parsed <- htmlParse("Exercises/worldHeritageDanger.html")
heritage_parsed <- XML::htmlParse("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
heritage_parsed <- htmlParse("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
names(tables)
danger_table <- tables[[2]]
danger_table <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE, which = 2)
names(danger_table)
heritage_parsed <- htmlParse("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger")
heritage_parsed <- htmlParse("Exercises/worldheritagedanger.htm")
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
library(XML)
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
danger_table <- tables[[2]]
tables
danger_table <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE, which = 2) # alternatively: directly select second table
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
heritage_parsed <- htmlParse("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
heritage_parsed <- htmlParse("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
heritage_parsed <- htmlParse("httpsÃ§://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
library(RCurl)
fileURL <- "http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger"
xData <- getURL(fileURL)
heritage_parsed <- htmlParse(xData)
heritage_parsed <- xmlParse(xData)
heritage_parsed <- xmlParse("worldheritagedanger.htm",encoding="UTF-8")
DAvalues<- read.csv(file="results/LshapeScoresDA.csv", row.names = 1)
GEOvalues<- read.csv(file="results/LshapeScoresGEO.csv", row.names = 1)
setwd("~/Dropbox (VHIR)/SotaCV/Selecting_GRM")
DAvalues<- read.csv(file="results/LshapeScoresDA.csv", row.names = 1)
GEOvalues<- read.csv(file="results/LshapeScoresGEO.csv", row.names = 1)
TCGAvalues<- read.csv(file="results/LshapeScoresTCGA.csv", row.names = 1)
commonGenes <- intersect(rownames(TCGAvalues), intersect(rownames(DAvalues), rownames(GEOvalues)))
length(commonGenes)
head(commonGenes)
colnames(resultsAll)
colnames(DAvalues)
TCGA_heuristic <-TCGAvalues[,"logicSc"]
DA_heuristic <-DAvalues[,"logicSc"]
GEO_heuristic <-GEOvalues[,"logicSc"]
TCGA_heuristic <-TCGAvalues[,"logicSc"]
DA_cmi <-DAvalues[,"meth_regulated"]
GEO_cmi <-GEOvalues[,"meth_regulated"]
TCGA_cmi <-TCGAvalues[,"meth_regulated"]
length(intersect(rownames(DA_heuristic), rownames(TCGA_heuristic)))
length(intersect(rownames(DA_heuristic), rownames(DA_cmi)))
head(rownames(DA_heuristic))
head(DA_heuristic)
DA_naive   <- as.data.frame((DAvalues[,"r..Sp."] < -0.5) & DAvalues[,"adj.Spear.Pval"] < 0.25)
GEO_naive  <- as.data.frame(GEOvalues[,"r..Sp."] < -0.5 & GEOvalues[,"adj.Spear.Pval"] < 0.25)
TCGA_naive <- as.data.frame(TCGAvalues[,"r..Sp."] < -0.5 & TCGAvalues[,"adj.Spear.Pval"]< 0.25)
DA_heuristic <-as.data.frame(DAvalues[,"logicSc"] )
GEO_heuristic <-as.data.frame(GEOvalues[,"logicSc"] )
TCGA_heuristic <-as.data.frame(TCGAvalues[,"logicSc"] )
DA_cmi <-as.data.frame(DAvalues[,"meth_regulated"] )
GEO_cmi <-as.data.frame(GEOvalues[,"meth_regulated"] )
TCGA_cmi <-as.data.frame(TCGAvalues[,"meth_regulated"] )
head(rownames(DA_heuristic))
head(DAvalues)
DA_naive   <- (DAvalues[,"r..Sp."] < -0.5) & DAvalues[,"adj.Spear.Pval"] < 0.25; names(DA_naive)<- rownames(DAvalues)
head(DA_naive)
names(DA_naive) <-names(DA_cmi) <- names(DA_heuristic)<- rownames(DAvalues)
DA_heuristic <-DAvalues[,"logicSc"]
dim(DA_heuristic)
length(DA_heuristic)
names(DA_naive) <-names(DA_cmi) <- names(DA_heuristic)<- rownames(DAvalues)
commonGenes <- intersect(rownames(TCGAvalues), intersect(rownames(DAvalues), rownames(GEOvalues)))
length(commonGenes)
A_CMI=DAvalues[commonGenes,"meth_regulated"]
setwd("~/Dropbox (VHIR)/SotaCV/Selecting_GRM")
setwd("~/Dropbox (VHIR)/Cursos i Materials/Cursos/Web_Scrapping/aWebScraping_with_R/2018-07-09_WebScraping4Statisticians")
